{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { getInitData } from '../api';\nexport var initHandler = function initHandler(initData) {\n  return function (store) {\n    store.on('@init', function () {\n      return initData;\n    });\n    store.on('init/fetch-res', function (state, newState) {\n      return newState;\n    });\n    store.on('init/fetch', function _callee(state) {\n      var data;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(getInitData());\n\n            case 2:\n              data = _context.sent;\n              store.dispatch('init/fetch-res', data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}