{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getHeaderData } from '../api';\nexport default (initialHeader => store => {\n  store.on('header/fetch-req', state => {\n    return {\n      header: {\n        fetching: true\n      }\n    };\n  });\n  store.on('header/fetch-res', (state, header) => {\n    return {\n      header: _objectSpread({}, header, {\n        fetching: false\n      })\n    };\n  });\n  store.on('header/fetch', async state => {\n    store.dispatch('header/fetch-req');\n    const header = await getHeaderData();\n    store.dispatch('header/fetch-res', header);\n  });\n});","map":{"version":3,"sources":["/Users/ws-047-31b/Wotk/honey-ui-3/store/header.js"],"names":["getHeaderData","initialHeader","store","on","state","header","fetching","dispatch"],"mappings":";;;;;;AAAA,SAASA,aAAT,QAA8B,QAA9B;AAEA,gBAAeC,aAAa,IAAIC,KAAK,IAAI;AAEvCA,EAAAA,KAAK,CAACC,EAAN,CAAS,kBAAT,EAA8BC,KAAD,IAAW;AACtC,WAAO;AACLC,MAAAA,MAAM,EAAE;AACNC,QAAAA,QAAQ,EAAE;AADJ;AADH,KAAP;AAKD,GAND;AAQAJ,EAAAA,KAAK,CAACC,EAAN,CAAS,kBAAT,EAA6B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9C,WAAO;AACLA,MAAAA,MAAM,oBACDA,MADC;AAEJC,QAAAA,QAAQ,EAAE;AAFN;AADD,KAAP;AAMD,GAPD;AASAJ,EAAAA,KAAK,CAACC,EAAN,CAAS,cAAT,EAAyB,MAAOC,KAAP,IAAiB;AACxCF,IAAAA,KAAK,CAACK,QAAN,CAAe,kBAAf;AACA,UAAMF,MAAM,GAAG,MAAML,aAAa,EAAlC;AACAE,IAAAA,KAAK,CAACK,QAAN,CAAe,kBAAf,EAAmCF,MAAnC;AACD,GAJD;AAKD,CAxBD","sourcesContent":["import { getHeaderData } from '../api';\n\nexport default initialHeader => store => {\n\n  store.on('header/fetch-req', (state) => {\n    return {\n      header: {\n        fetching: true,\n      }\n    }\n  });\n\n  store.on('header/fetch-res', (state, header) => {\n    return {\n      header: {\n        ...header,\n        fetching: false,\n      }\n    }\n  })\n\n  store.on('header/fetch', async (state) => {\n    store.dispatch('header/fetch-req');\n    const header = await getHeaderData();\n    store.dispatch('header/fetch-res', header);\n  });\n}"]},"metadata":{},"sourceType":"module"}